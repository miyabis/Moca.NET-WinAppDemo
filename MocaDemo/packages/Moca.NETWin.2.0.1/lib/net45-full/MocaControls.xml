<?xml version="1.0"?>
<doc>
<assembly>
<name>
MocaControls
</name>
</assembly>
<members>
<member name="T:Moca.Win.WYSIWYGEditor.FontSize">
	<summary>
 フォントサイズ
 </summary>
	<remarks></remarks>
</member><member name="P:Moca.Win.WYSIWYGEditor.Font">
	<summary>
 フォント
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.WYSIWYGEditor.ForeColor">
	<summary>
 文字色
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.WYSIWYGEditor.DataBindings">
	<summary>
 データバインディング
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.WYSIWYGEditor.ImeModeBase">
	<summary>
 IMEモード
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.WYSIWYGEditor.Text">
	<summary>
 入力内容
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.WYSIWYGEditor.Rtf">
	<summary>
 リッチテキスト内容
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.WYSIWYGEditor.ToHTML">
	<summary>
 入力内容のHTMLコード
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Moca.Win.WYSIWYGEditor.tsbtnBold_Click(System.Object,System.EventArgs)">
	<summary>
 太字かどうかを示す
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.WYSIWYGEditor.tsbtnItalic_Click(System.Object,System.EventArgs)">
	<summary>
 斜体スタイルが適用されているかどうかを示す
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.WYSIWYGEditor.tsbtnUnderline_Click(System.Object,System.EventArgs)">
	<summary>
 下線付きかどうかを示す
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.WYSIWYGEditor.tsbtnStrikeout_Click(System.Object,System.EventArgs)">
	<summary>
 フォントを通る水平線を指定するかどうかを示す
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.WYSIWYGEditor.tsbtnSizeUp_Click(System.Object,System.EventArgs)">
	<summary>
 文字を大きくする
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.WYSIWYGEditor.tsbtnSizeDown_Click(System.Object,System.EventArgs)">
	<summary>
 文字を小さくする
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.WYSIWYGEditor.tsbtnColor_Click(System.Object,System.EventArgs)">
	<summary>
 文字色を変更
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.WYSIWYGEditor.tsbtnBrowserView_Click(System.Object,System.EventArgs)">
	<summary>
 ブラウザでの描画確認
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.WYSIWYGEditor._rich2HTML(System.Windows.Forms.RichTextBox)">
	<summary>
 変換
 </summary>
	<param name="rtbBox"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Moca.Win.WYSIWYGEditor._getFontStyle(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
 フォントスタイルコンバート
 </summary>
	<param name="Bold"></param>
	<param name="Italic"></param>
	<param name="Underline"></param>
	<param name="Strikeout"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:Moca.Win.WYSIWYGEditor">
	<summary>
 WYSIWYG エディター
 </summary>
	<remarks></remarks>
</member><member name="F:Moca.Win.ToolStripMenuItemGroup._aryRadButton">
	<summary>メニューアイテム化するItemを格納する</summary>
</member><member name="F:Moca.Win.ToolStripMenuItemGroup.parentDropDownButton">
	<summary>親のDropDownButton</summary>
</member><member name="P:Moca.Win.ToolStripMenuItemGroup.ParentItem">
	<summary>
 親のDropDownButton
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Moca.Win.ToolStripMenuItemGroup.parentDropDownButton_DropDownItemClicked(System.Object,System.Windows.Forms.ToolStripItemClickedEventArgs)">
	<summary>
 親のDropDownButtonが指定されているときは、DropDownItemClickedイベントをハンドルする
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.ToolStripMenuItemGroup.Add(System.Windows.Forms.ToolStripMenuItem@)">
	<summary>
 メニューアイテムを追加する
 </summary>
	<param name="ctrl">メニューアイテム</param>
	<remarks>
	</remarks>
</member><member name="M:Moca.Win.ToolStripMenuItemGroup.Add(System.Windows.Forms.ToolStripMenuItem@,System.Object)">
	<summary>
 メニューアイテムを追加する
 </summary>
	<param name="ctrl">メニューアイテム</param>
	<param name="value">値</param>
	<remarks>
 タグプロパティへ指定された値が保存されます。<br/>
	</remarks>
</member><member name="M:Moca.Win.ToolStripMenuItemGroup.GetSelected">
	<summary>
 現在選択されているメニューアイテムコントロールを返す
 </summary>
	<returns>現在選択されているメニューアイテムコントロール。未選択時は Nothing を返す。</returns>
	<remarks>
	</remarks>
</member><member name="M:Moca.Win.ToolStripMenuItemGroup.GetSelectedValue">
	<summary>
 現在選択されているメニューアイテムコントロールの値を返す
 </summary>
	<returns>現在選択されているメニューアイテムコントロール。未選択時は Nothing を返す。</returns>
	<remarks>
 タグプロパティに値が設定されている事が前提です。<br/>
 当メソッドを使用する場合は、<see cref="M:Moca.Win.ToolStripMenuItemGroup.Add(System.Windows.Forms.ToolStripMenuItem@)"/> に <c>value</c> を指定してください。
 </remarks>
</member><member name="M:Moca.Win.ToolStripMenuItemGroup.SetSelected(System.Windows.Forms.ToolStripMenuItem)">
	<summary>
 指定された値のメニューアイテムを選択する
 </summary>
	<param name="mnu">選択したいToolStripMenuItem</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Moca.Win.ToolStripMenuItemGroup.SetSelected(System.Object)">
	<summary>
 指定された値のメニューアイテムを選択する
 </summary>
	<param name="value">選択したい値</param>
	<returns></returns>
	<remarks>
 タグプロパティに値が設定されている事が前提です。<br/>
 当メソッドを使用する場合は、<see cref="M:Moca.Win.ToolStripMenuItemGroup.Add(System.Windows.Forms.ToolStripMenuItem@)"/> に <c>value</c> を指定してください。
 </remarks>
</member><member name="T:Moca.Win.ToolStripMenuItemGroup">
	<summary>
 複数のメニューアイテムをグループとして扱うクラス
 </summary>
	<remarks>
 複数のメニューアイテムを一つのグループとして扱えます。<br/>
	</remarks>
</member><member name="F:Moca.Win.TextBoxEx.InputFormatType.None">
	<summary>制御無し</summary>
</member><member name="F:Moca.Win.TextBoxEx.InputFormatType.Number">
	<summary>数字のみ</summary>
</member><member name="F:Moca.Win.TextBoxEx.InputFormatType.Digit">
	<summary>数値</summary>
</member><member name="F:Moca.Win.TextBoxEx.InputFormatType.Alpha">
	<summary>英字</summary>
</member><member name="F:Moca.Win.TextBoxEx.InputFormatType.WithSpace">
	<summary>スペース含む</summary>
</member><member name="F:Moca.Win.TextBoxEx.InputFormatType.Upper">
	<summary>大文字</summary>
</member><member name="F:Moca.Win.TextBoxEx.InputFormatType.Sign">
	<summary>符号</summary>
	<remarks>
		<see cref="F:Moca.Win.TextBoxEx.InputFormatType.Digit"/>、<see cref="F:Moca.Win.TextBoxEx.InputFormatType.Number"/>指定時のみ有効
 </remarks>
</member><member name="F:Moca.Win.TextBoxEx.InputFormatType.SignWithColor">
	<summary>符号（マイナス時は赤文字）</summary>
	<remarks>
		<see cref="F:Moca.Win.TextBoxEx.InputFormatType.Digit"/>、<see cref="F:Moca.Win.TextBoxEx.InputFormatType.Number"/>指定時のみ有効
 </remarks>
</member><member name="F:Moca.Win.TextBoxEx.InputFormatType.Symbol">
	<summary>記号</summary>
</member><member name="T:Moca.Win.TextBoxEx.InputFormatType">
	<summary>入力制御種別列挙型</summary>
</member><member name="F:Moca.Win.TextBoxEx.inputFormatStrings">
	<summary>入力制御種別別の許可する文字種</summary>
</member><member name="E:Moca.Win.TextBoxEx.PressEnterKey">
	<summary>Enterキー押下イベント</summary>
</member><member name="F:Moca.Win.TextBoxEx.WM_CHAR">
	<summary>文字メッセージ</summary>
</member><member name="F:Moca.Win.TextBoxEx.WM_PASTE">
	<summary>貼り付けメッセージ</summary>
</member><member name="F:Moca.Win.TextBoxEx.WM_KEYDOWN">
	<summary>キー押下メッセージ</summary>
</member><member name="F:Moca.Win.TextBoxEx._nowPaste">
	<summary>貼り付け処理中フラグ</summary>
</member><member name="F:Moca.Win.TextBoxEx._nowChange">
	<summary>区切り入力中フラグ</summary>
</member><member name="F:Moca.Win.TextBoxEx._inputFormat">
	<summary>入力制御種別</summary>
</member><member name="F:Moca.Win.TextBoxEx._percision">
	<summary>小数点以下の桁数</summary>
</member><member name="F:Moca.Win.TextBoxEx._percisionSign">
	<summary>小数点入力済みフラグ</summary>
</member><member name="F:Moca.Win.TextBoxEx._separator">
	<summary>区切り</summary>
</member><member name="F:Moca.Win.TextBoxEx._scale">
	<summary>小数点の右側にある保存できる最大文字</summary>
</member><member name="F:Moca.Win.TextBoxEx._orgMaxLength">
	<summary>元々のテキストボックスの最大入力桁数</summary>
</member><member name="F:Moca.Win.TextBoxEx._orgForeColor">
	<summary>元々のテキストボックスの文字色</summary>
</member><member name="P:Moca.Win.TextBoxEx.InputFormat">
	<summary>
 入力制御種別
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.TextBoxEx.Percision">
	<summary>
 小数点以下の桁数
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.TextBoxEx.PercisionSign">
	<summary>
 小数点入力済みフラグ
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.TextBoxEx.Separator">
	<summary>
 区切り
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.TextBoxEx.NumericScale">
	<summary>
 小数点の右側にある保存できる最大文字
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.TextBoxEx.NegativeColor">
	<summary>
 負数の表示色
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.TextBoxEx.IsAlpha">
	<summary>
 英字指定有無
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.TextBoxEx.IsDigit">
	<summary>
 数値指定有無
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.TextBoxEx.IsNumber">
	<summary>
 数字指定有無
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.TextBoxEx.IsUpper">
	<summary>
 大文字指定有無
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.TextBoxEx.IsWithSpace">
	<summary>
 スペース許容有無
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.TextBoxEx.IsSign">
	<summary>
 符号許容有無
 </summary>
	<value></value>
	<returns></returns>
	<remarks>
		<see cref="F:Moca.Win.TextBoxEx.InputFormatType.Digit"/>、<see cref="F:Moca.Win.TextBoxEx.InputFormatType.Number"/>指定時のみ有効
 </remarks>
</member><member name="P:Moca.Win.TextBoxEx.IsSignWithColor">
	<summary>
 符号許容有無
 </summary>
	<value></value>
	<returns></returns>
	<remarks>
		<see cref="F:Moca.Win.TextBoxEx.InputFormatType.Digit"/>、<see cref="F:Moca.Win.TextBoxEx.InputFormatType.Number"/>指定時のみ有効
 </remarks>
</member><member name="P:Moca.Win.TextBoxEx.IsSymbol">
	<summary>
 記号指定有無
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.TextBoxEx.MaxLength">
	<summary>
 入力文字最大桁数
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.TextBoxEx.ForeColor">
	<summary>
 文字色
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Moca.Win.TextBoxEx.WndProc(System.Windows.Forms.Message@)">
	<summary>
 WndProc イベント
 </summary>
	<param name="m"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.TextBoxEx.OnChar(System.Windows.Forms.KeyPressEventArgs)">
	<summary>
 文字列がクライアント領域に送信された時に呼び出されるメソッド
 </summary>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.TextBoxEx._OnCharBackSpace">
	<summary>
 BackSpaceキー押下
 </summary>
	<remarks></remarks>
</member><member name="M:Moca.Win.TextBoxEx._exclusionChar09(System.Char)">
	<summary>
 0 ～ 9 キー押下
 </summary>
	<param name="KeyChar"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Moca.Win.TextBoxEx._exclusionCharAZ(System.Char)">
	<summary>
 大文字の A ～ Z キー押下
 </summary>
	<param name="KeyChar"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Moca.Win.TextBoxEx._exclusionCharAZ2(System.Char)">
	<summary>
 小文字の a ～ z キー押下
 </summary>
	<param name="KeyChar"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Moca.Win.TextBoxEx._exclusionCharSpace(System.Char)">
	<summary>
 スペース入力の無効判定
 </summary>
	<param name="KeyChar"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Moca.Win.TextBoxEx._exclusionCharSign(System.Char)">
	<summary>
 数値サイン付判定
 </summary>
	<param name="KeyChar"></param>
	<returns></returns>
	<remarks>
 入力形式として<see cref="F:Moca.Win.TextBoxEx.InputFormatType.Digit"/>と<see cref="F:Moca.Win.TextBoxEx.InputFormatType.Sign"/>が指定されたとき、
 文字列の先頭へ符号をつけます。<br/>
 「ー」入力のときはドグル入力で＋－が入れ替わります。<br/>
 「＋」入力のときはマイナス時は符号を消してプラス時は何もしません。<br/>
	</remarks>
</member><member name="M:Moca.Win.TextBoxEx._exclusionCharDot(System.Char)">
	<summary>
 ドット入力の無効判定
 </summary>
	<param name="KeyChar"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Moca.Win.TextBoxEx._exclusionCharSymbol(System.Char)">
	<summary>
 記号入力の無効判定
 </summary>
	<param name="KeyChar"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Moca.Win.TextBoxEx.OnPaste(System.EventArgs)">
	<summary>
 [貼り付け] した時に呼び出されるメソッド
 </summary>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.TextBoxEx.TextBoxEx_GotFocus(System.Object,System.EventArgs)">
	<summary>
 テキストボックスへフォーカス移動イベント
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.TextBoxEx.TextBoxEx_LostFocus(System.Object,System.EventArgs)">
	<summary>
 テキストボックスからフォーカス移動イベント
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.TextBoxEx.TextBoxEx_KeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
	<summary>
 キー押下
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.TextBoxEx.TextBoxEx_KeyUp(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>
 キーアップ時
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.TextBoxEx._keyPressUpper(System.Windows.Forms.KeyPressEventArgs)">
	<summary>
 キー押下時（Upper指定時）
 </summary>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.TextBoxEx._keyUpDigit(System.Windows.Forms.KeyEventArgs)">
	<summary>
 キーアップ時の数値制御
 </summary>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.TextBoxEx._isFormat(Moca.Win.TextBoxEx.InputFormatType)">
	<summary>
 フォーマット種別の判別
 </summary>
	<param name="targetType"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Moca.Win.TextBoxEx._cnvDigit(System.String)">
	<summary>
 数値変換
 </summary>
	<param name="val"></param>
	<returns></returns>
	<remarks>文字列から数値のみを抽出して返す</remarks>
</member><member name="M:Moca.Win.TextBoxEx._setSignInput(System.String)">
	<summary>
 負号入力モード時の設定
 </summary>
	<param name="val"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.TextBoxEx._cnvDigitMatch(System.Int32,System.String)">
	<summary>
 数値指定時のコピー文字列抽出判定
 </summary>
	<param name="idx"></param>
	<param name="Value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Moca.Win.TextBoxEx._cnvNoDigit(System.String,System.String)">
	<summary>
 数値以外
 </summary>
	<param name="val"></param>
	<param name="cnv"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Moca.Win.TextBoxEx._changeText(System.String)">
	<summary>
 テキストプロパティ編集
 </summary>
	<param name="val"></param>
	<remarks></remarks>
</member><member name="T:Moca.Win.TextBoxEx">
	<summary>
 標準のTextBoxで入力制限等を扱えるように拡張したコントロール
 </summary>
	<remarks>
 ・テキストボックスのIMEは無効とします。<br/>
 ・フォーカスが当たると文字を選択状態にします。<br/>
 ・Enterキーは判定してPressEnterKeyイベントを発行します。<br/>
 ・コピペ処理を考慮しています。<br/>
		<br/>
 ※下記サイトを参考に作成しています。<Br/>
 http://jeanne.wankuma.com/tips/vb.net/textbox/permitchars.html
 </remarks>
</member><member name="T:Moca.Win.RadioButtonGroup.MoveType">
	<summary>
 矢印ボタン押下時のボタン移動方法
 </summary>
	<remarks></remarks>
</member><member name="F:Moca.Win.RadioButtonGroup._aryButton">
	<summary>ラジオボタン化するItemを格納する</summary>
</member><member name="P:Moca.Win.RadioButtonGroup.SelectedValue">
	<summary>
 グループ内のラジオボタンを値で選択又は選択されているラジオボタンの値を取得
 </summary>
	<value></value>
	<returns></returns>
	<remarks>
 タグプロパティに値が設定されている事が前提ですので、<see cref="M:Moca.Win.RadioButtonGroup.Add(System.Windows.Forms.RadioButton@)"/> メソッドは Value 指定してください。
 </remarks>
</member><member name="P:Moca.Win.RadioButtonGroup.SelectedButton">
	<summary>
 グループ内のラジオボタンをラジオボタンオブジェクトで選択又は選択されているラジオボタンのラジオボタンオブジェクトを取得
 </summary>
	<value></value>
	<returns></returns>
	<remarks>
 未選択時は Nothing を返します。
 </remarks>
</member><member name="P:Moca.Win.RadioButtonGroup.Enabled">
	<summary>
 コントロールがユーザーとの対話に応答できるかどうかを示す値を設定します。
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Moca.Win.RadioButtonGroup._radioButton_CheckedChanged(System.Object,System.EventArgs)">
	<summary>
 ラジオボタンの Checked プロパティの値が変更されたときイベント
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.RadioButtonGroup._radioButton_PreviewKeyDown(System.Object,System.Windows.Forms.PreviewKeyDownEventArgs)">
	<summary>
 ラジオボタンキーダウンイベント
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.RadioButtonGroup.Add(System.Windows.Forms.RadioButton@)">
	<summary>
 ラジオボタンを追加する
 </summary>
	<param name="ctrl">グループにしたいラジオボタン</param>
	<remarks>
	</remarks>
</member><member name="M:Moca.Win.RadioButtonGroup.Add(System.Windows.Forms.RadioButton@,System.Object)">
	<summary>
 ラジオボタンを追加する
 </summary>
	<param name="ctrl">グループにしたいラジオボタン</param>
	<param name="value">保持したい値</param>
	<remarks>
 value にて指定された値を Tag プロパティにて保持します。
 </remarks>
</member><member name="M:Moca.Win.RadioButtonGroup.GetSelected">
	<summary>
 現在選択されているラジオボタンコントロールを返す
 </summary>
	<returns></returns>
	<remarks>
 未選択時は Nothing を返します。
 </remarks>
</member><member name="M:Moca.Win.RadioButtonGroup.GetSelectedValue">
	<summary>
 現在選択されているラジオボタンコントロールの値を返す
 </summary>
	<returns></returns>
	<remarks>
 タグプロパティに値が設定されている事が前提ですので、<see cref="M:Moca.Win.RadioButtonGroup.Add(System.Windows.Forms.RadioButton@)"/> メソッドは Value 指定してください。
 </remarks>
</member><member name="M:Moca.Win.RadioButtonGroup.SetSelected(System.Windows.Forms.RadioButton)">
	<summary>
 指定された値のラジオボタンを選択する
 </summary>
	<param name="btn">選択したいRadioButtonを設定</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Moca.Win.RadioButtonGroup.SetSelected(System.Object)">
	<summary>
 指定された値のラジオボタンを選択する
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks>
 タグプロパティに値が設定されている事が前提ですので、<see cref="M:Moca.Win.RadioButtonGroup.Add(System.Windows.Forms.RadioButton@)"/> メソッドは Value 指定してください。
 </remarks>
</member><member name="M:Moca.Win.RadioButtonGroup._setForcus(System.Object,Moca.Win.RadioButtonGroup.MoveType)">
	<summary>
 指定されたラジオボタンから指定された方向へカーソルを移動する。
 </summary>
	<param name="sender"></param>
	<param name="type"></param>
	<remarks></remarks>
</member><member name="T:Moca.Win.RadioButtonGroup">
	<summary>
 複数のラジオボタンをグループとして扱うコンポーネント
 </summary>
	<remarks>
 複数のラジオボタンを一つのグループとして扱えます。<br/>
 パネルコントロールなどでグループ化するには複雑過ぎる画面などでの使用を想定しています。<br/>
 データバインディングは SelectedValue が対応しています。<br/>
	</remarks>
</member><member name="F:Moca.Win.NullableDateTimePicker._isNull">
	<summary>現在の値がNull値かどうかを判定</summary>
</member><member name="F:Moca.Win.NullableDateTimePicker._nullValue">
	<summary>Nullだった場合に表示する文字列</summary>
</member><member name="M:Moca.Win.NullableDateTimePicker.#ctor">
	<summary>
 デフォルトコンストラクタ
 </summary>
	<remarks>
	</remarks>
</member><member name="M:Moca.Win.NullableDateTimePicker.#ctor(System.Windows.Forms.DateTimePicker)">
	<summary>
 標準DateTimePickerを置き換えるコンストラクタ
 </summary>
	<param name="dtpOriginal">置き換えするDateTimePicker</param>
	<remarks>
 コピーするプロパティは今の所
     Location、Size、Font、CalendarFont、Format、CustomFormat、TabIndex、Tag
 </remarks>
</member><member name="P:Moca.Win.NullableDateTimePicker.CustomFormat">
	<summary>
 カスタムフォーマット文字列プロパティ
 </summary>
	<value>フォーマット文字列</value>
	<remarks>
 基本クラスのシャドウ
 </remarks>
</member><member name="P:Moca.Win.NullableDateTimePicker.Format">
	<summary>
 日時のフォーマットプロパティ
 </summary>
	<value>日時のフォーマット</value>
	<remarks>
 基本クラスのシャドウ
 </remarks>
</member><member name="P:Moca.Win.NullableDateTimePicker.FormatAsString">
	<summary>
 親のカスタムフォーマット文字列プロパティ
 </summary>
	<value>親のカスタムフォーマット文字列</value>
	<remarks>
	</remarks>
</member><member name="P:Moca.Win.NullableDateTimePicker.Value">
	<summary>
 Valueプロパティ
 </summary>
	<value>Value</value>
	<remarks>
 基本クラスのシャドウ
 </remarks>
</member><member name="P:Moca.Win.NullableDateTimePicker.Text">
	<summary>
 Textプロパティ
 </summary>
	<value></value>
	<returns></returns>
	<remarks>
 Null状態のときに、<see cref="P:Moca.Win.NullableDateTimePicker.CustomFormat"/>プロパティを” ”とするため、” ”を返してしまう。<br/>
 これを回避する為オーバーライドしてTrimしてます。
 </remarks>
</member><member name="P:Moca.Win.NullableDateTimePicker.NullValue">
	<summary>
 Nullだった場合に表示する文字列プロパティ
 </summary>
	<value>Nullだった場合に表示する文字列</value>
	<remarks>
	</remarks>
</member><member name="M:Moca.Win.NullableDateTimePicker.OnCloseUp(System.EventArgs)">
	<summary>
 ドロップダウン時のポップアップ画面が閉じられたイベントのオーバーライド
 </summary>
	<param name="eventargs"></param>
	<remarks>
	</remarks>
</member><member name="M:Moca.Win.NullableDateTimePicker.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
	<summary>
 キーアップイベントのオーバーライド
 </summary>
	<param name="e"></param>
	<remarks>
 Delete キー押下時は空にする。
 </remarks>
</member><member name="M:Moca.Win.NullableDateTimePicker._replaceControl(System.Windows.Forms.DateTimePicker)">
	<summary>
 標準DateTimePickerを置き換え
 </summary>
	<param name="dtpOriginal">置き換えするDateTimePicker</param>
	<remarks>
	</remarks>
</member><member name="M:Moca.Win.NullableDateTimePicker._setFormat">
	<summary>
 フォーマットの設定
 </summary>
	<remarks>
	</remarks>
</member><member name="M:Moca.Win.NullableDateTimePicker._setToDateTimeValue">
	<summary>
 日付入力時のValue設定
 </summary>
	<remarks>
	</remarks>
</member><member name="M:Moca.Win.NullableDateTimePicker._setToNullValue">
	<summary>
 Null入力時のValue設定
 </summary>
	<remarks>
	</remarks>
</member><member name="T:Moca.Win.NullableDateTimePicker">
	<summary>
 標準のDateTimePickerでNullを扱えるように拡張したコントロール
 </summary>
	<remarks>
 標準のDateTimePickerではNullを扱えないので、設定出来るようにし、
 DellキーにてNullにする事が可能となっている。<br/>
 Null値の場合に扱う値は、ユーザーがNullValueプロパティにて自由に設定出来ます。<br/>
		<br/>
 注１）<br/>
 　vbNullは使用できません。<br/>
 　Null値にしたい場合は、vbNullString 又は、DBNull.Valueを使用してください。<br/>
	</remarks>
</member><member name="F:Moca.Win.MocaDi._injector">
	<summary>ページに対しての依存性注入</summary>
</member><member name="T:Moca.Win.MocaDi">
	<summary>
 AOP を利用するためのコントローラ
 </summary>
	<remarks></remarks>
</member><member name="F:Moca.Win.DebugMarker._toolTipText">
	<summary>ツールチップテキスト</summary>
</member><member name="M:Moca.Win.DebugMarker.#ctor">
	<summary>
 デフォルトコンストラクタ
 </summary>
	<remarks></remarks>
</member><member name="P:Moca.Win.DebugMarker.ToolTipText">
	<summary>ツールチップテキスト</summary>
</member><member name="M:Moca.Win.DebugMarker.DebugMarker_Load(System.Object,System.EventArgs)">
	<summary>
 コントロールロード
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.DebugMarker.DebugMarker_Resize(System.Object,System.EventArgs)">
	<summary>
 コントロールサイズ変更
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="T:Moca.Win.DebugMarker">
	<summary>
 デバッグ印
 </summary>
	<remarks></remarks>
</member><member name="F:Moca.Win.DayStyle.Name">
	<summary>
 スタイルを識別するID
 </summary>
	<remarks></remarks>
</member><member name="F:Moca.Win.DayStyle.Title">
	<summary>
 タイトル
 </summary>
	<remarks>
 ボタンのツールチップとして表示されます。
 </remarks>
</member><member name="F:Moca.Win.DayStyle.BackColor">
	<summary>
 ボタンのバックカラー
 </summary>
	<remarks></remarks>
</member><member name="F:Moca.Win.DayStyle.ForeColor">
	<summary>
 ボタンの文字色
 </summary>
	<remarks></remarks>
</member><member name="F:Moca.Win.DayStyle.Font">
	<summary>
 ボタンのフォント
 </summary>
	<remarks></remarks>
</member><member name="M:Moca.Win.DayStyle.#ctor(System.String)">
	<summary>
 コンストラクタ
 </summary>
	<param name="name"></param>
	<remarks></remarks>
</member><member name="T:Moca.Win.DayStyle">
	<summary>
 カレンダーコントロールの日付表示スタイル
 </summary>
	<remarks></remarks>
</member><member name="F:Moca.Win.DataBinder._bindSrc">
	<summary>フォームのデータ ソースをカプセル化</summary>
</member><member name="P:Moca.Win.DataBinder.DataSource">
	<summary>
 バインドするデータソース
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.DataBinder.DataMember">
	<summary>
 バインドするデータソースのメンバ名
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.DataBinder.Position">
	<summary>
 現在行位置
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.DataBinder.CurrentRow">
	<summary>
 現在行データ
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Moca.Win.DataBinder.CurrentEntity``1">
	<summary>
 現在行データ
 </summary>
	<typeparam name="T"></typeparam>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.DataBinder._current">
	<summary>
 現在行データ
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.DataBinder._currentEditableObject">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Moca.Win.DataBinder.EndCurrentEdit">
	<summary>
 現在行の編集終了
 </summary>
	<remarks></remarks>
</member><member name="M:Moca.Win.DataBinder.EndEdit">
	<summary>
 現在行の編集終了
 </summary>
	<remarks></remarks>
</member><member name="M:Moca.Win.DataBinder.HasChanges">
	<summary>
 新しい行、削除された行、変更された行などの変更があるかどうかを示す値を取得します。
 </summary>
	<returns>変更がある場合は true。それ以外の場合は false。</returns>
	<remarks></remarks>
</member><member name="M:Moca.Win.DataBinder.AcceptChanges">
	<summary>
 データソース全体の変更をコミットする 
 </summary>
	<remarks>
	</remarks>
</member><member name="M:Moca.Win.DataBinder.AcceptChangesRow">
	<summary>
 現在行の変更をコミットする 
 </summary>
	<remarks>
	</remarks>
</member><member name="M:Moca.Win.DataBinder.RejectChanges">
	<summary>
 データソース全体で前回 AcceptChanges を呼び出した以降にこのデータに対して行われたすべての変更をロールバックします。
 </summary>
	<remarks></remarks>
</member><member name="M:Moca.Win.DataBinder.RejectChangesRow">
	<summary>
 現在行で前回 AcceptChanges を呼び出した以降にこのデータに対して行われたすべての変更をロールバックします。
 </summary>
	<remarks></remarks>
</member><member name="M:Moca.Win.DataBinder.MoveNext">
	<summary>
 リストの次の項目に移動します。
 </summary>
	<remarks></remarks>
</member><member name="M:Moca.Win.DataBinder.MovePrevious">
	<summary>
 リストの前の項目に移動します。
 </summary>
	<remarks></remarks>
</member><member name="M:Moca.Win.DataBinder.MoveFirst">
	<summary>
 リストの最初の項目に移動します。
 </summary>
	<remarks></remarks>
</member><member name="M:Moca.Win.DataBinder.MoveLast">
	<summary>
 リストの最後の項目に移動します。
 </summary>
	<remarks></remarks>
</member><member name="M:Moca.Win.DataBinder.DataBinding(System.Windows.Forms.Label,System.String,System.Object,System.Object)">
	<summary>
 ラベルのデータバインディング
 </summary>
	<param name="ctrl">ラベル</param>
	<param name="dataMember">バインドするデータソースの項目名</param>
	<param name="dataSourceNullValue">コントロールの値が null 参照 (Visual Basic では Nothing) または空の場合にデータ ソースに格納される値を取得または設定します。 </param>
	<param name="nullValue">データ ソースに <see cref="T:System.DBNull"/> 値が格納されている場合にコントロール プロパティとして設定される <see cref="T:System.Object"/> を取得または設定します。</param>
	<remarks></remarks>
</member><member name="M:Moca.Win.DataBinder.DataBinding(System.Windows.Forms.TextBox,System.String,System.Object,System.Object,System.String)">
	<summary>
 テキストボックスのデータバインディング
 </summary>
	<param name="ctrl">テキストボックス</param>
	<param name="dataMember">バインドするデータソースの項目名</param>
	<param name="dataSourceNullValue">コントロールの値が null 参照 (Visual Basic では Nothing) または空の場合にデータ ソースに格納される値を取得または設定します。 </param>
	<param name="nullValue">データ ソースに <see cref="T:System.DBNull"/> 値が格納されている場合にコントロール プロパティとして設定される <see cref="T:System.Object"/> を取得または設定します。</param>
	<remarks></remarks>
</member><member name="M:Moca.Win.DataBinder.DataBinding(System.Windows.Forms.ComboBox,System.String,System.Object,System.Object)">
	<summary>
 コンボボックスのデータバインディング
 </summary>
	<param name="ctrl">コンボボックス</param>
	<param name="dataMember">バインドするデータソースの項目名</param>
	<param name="dataSourceNullValue">コントロールの値が null 参照 (Visual Basic では Nothing) または空の場合にデータ ソースに格納される値を取得または設定します。 </param>
	<param name="nullValue">データ ソースに <see cref="T:System.DBNull"/> 値が格納されている場合にコントロール プロパティとして設定される <see cref="T:System.Object"/> を取得または設定します。</param>
	<remarks></remarks>
</member><member name="M:Moca.Win.DataBinder.DataBinding(System.Windows.Forms.CheckBox,System.String,System.Object,System.Object)">
	<summary>
 チェックボックスのデータバインディング
 </summary>
	<param name="ctrl">チェックボックス</param>
	<param name="dataMember">バインドするデータソースの項目名</param>
	<param name="dataSourceNullValue">コントロールの値が null 参照 (Visual Basic では Nothing) または空の場合にデータ ソースに格納される値を取得または設定します。 </param>
	<param name="nullValue">データ ソースに <see cref="T:System.DBNull"/> 値が格納されている場合にコントロール プロパティとして設定される <see cref="T:System.Object"/> を取得または設定します。</param>
	<remarks></remarks>
</member><member name="M:Moca.Win.DataBinder.DataBinding(System.Windows.Forms.DateTimePicker,System.String,System.Object,System.Object)">
	<summary>
 標準のDateTimePickerでNullを扱えるように拡張したコントロールのデータバインディング
 </summary>
	<param name="ctrl">標準のDateTimePickerでNullを扱えるように拡張したコントロール</param>
	<param name="dataMember">バインドするデータソースの項目名</param>
	<param name="dataSourceNullValue">コントロールの値が null 参照 (Visual Basic では Nothing) または空の場合にデータ ソースに格納される値を取得または設定します。 </param>
	<param name="nullValue">データ ソースに <see cref="T:System.DBNull"/> 値が格納されている場合にコントロール プロパティとして設定される <see cref="T:System.Object"/> を取得または設定します。</param>
	<remarks></remarks>
</member><member name="M:Moca.Win.DataBinder.DataBinding(Moca.Win.NullableDateTimePicker,System.String,System.Object,System.Object)">
	<summary>
 標準のNullableDateTimePickerでNullを扱えるように拡張したコントロールのデータバインディング
 </summary>
	<param name="ctrl">標準のNullableDateTimePickerでNullを扱えるように拡張したコントロール</param>
	<param name="dataMember">バインドするデータソースの項目名</param>
	<param name="dataSourceNullValue">コントロールの値が null 参照 (Visual Basic では Nothing) または空の場合にデータ ソースに格納される値を取得または設定します。 </param>
	<param name="nullValue">データ ソースに <see cref="T:System.DBNull"/> 値が格納されている場合にコントロール プロパティとして設定される <see cref="T:System.Object"/> を取得または設定します。</param>
	<remarks></remarks>
</member><member name="M:Moca.Win.DataBinder.DataBinding(Moca.Win.RadioButtonGroup,System.String,System.Object,System.Object)">
	<summary>
 複数のラジオボタンをグループとして扱うコンポーネントのデータバインディング
 </summary>
	<param name="ctrl">複数のラジオボタンをグループとして扱うコンポーネント</param>
	<param name="dataMember">バインドするデータソースの項目名</param>
	<param name="dataSourceNullValue">コントロールの値が null 参照 (Visual Basic では Nothing) または空の場合にデータ ソースに格納される値を取得または設定します。 </param>
	<param name="nullValue">データ ソースに <see cref="T:System.DBNull"/> 値が格納されている場合にコントロール プロパティとして設定される <see cref="T:System.Object"/> を取得または設定します。</param>
	<remarks></remarks>
</member><member name="M:Moca.Win.DataBinder.DataBinding(Moca.Win.TextBoxEx,System.String,System.Object,System.Object,System.String)">
	<summary>
 テキストボックスExのデータバインディング
 </summary>
	<param name="ctrl">テキストボックス</param>
	<param name="dataMember">バインドするデータソースの項目名</param>
	<param name="dataSourceNullValue">コントロールの値が null 参照 (Visual Basic では Nothing) または空の場合にデータ ソースに格納される値を取得または設定します。 </param>
	<param name="nullValue">データ ソースに <see cref="T:System.DBNull"/> 値が格納されている場合にコントロール プロパティとして設定される <see cref="T:System.Object"/> を取得または設定します。</param>
	<remarks></remarks>
</member><member name="M:Moca.Win.DataBinder.DataBinding(Moca.Win.TextBoxEx,Moca.Db.DbInfoColumn,System.Object,System.Object,System.String)">
	<summary>
	</summary>
	<param name="ctrl"></param>
	<param name="dataMember"></param>
	<param name="dataSourceNullValue"></param>
	<param name="nullValue"></param>
	<param name="formatString"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.DataBinder._dataBinding(System.Windows.Forms.IBindableComponent,System.String,System.String,System.Object,System.Object,System.String)">
	<summary>
 データバインディングする
 </summary>
	<param name="obj">対象のコントロール</param>
	<param name="propertyName">バインドするコントロールのプロパティ名</param>
	<param name="dataMember">バインドするデータソースの項目名</param>
	<param name="dataSourceNullValue">コントロールの値が null 参照 (Visual Basic では Nothing) または空の場合にデータ ソースに格納される値を取得または設定します。 </param>
	<param name="nullValue">データ ソースに <see cref="T:System.DBNull"/> 値が格納されている場合にコントロール プロパティとして設定される <see cref="T:System.Object"/> を取得または設定します。</param>
	<remarks>
 コントロール プロパティの値が変更されるたびに、データ ソースが更新されます。
 </remarks>
</member><member name="M:Moca.Win.DataBinder.DataBinding(System.Windows.Forms.PictureBox,System.String)">
	<summary>
 ピクチャボックスのデータバインディング
 </summary>
	<param name="pbx">ピクチャボックス</param>
	<param name="dataMember">バインドするデータソースの項目名</param>
	<remarks>
 未使用。ピクチャボックスをバインディングするのはやめたので。
 </remarks>
</member><member name="M:Moca.Win.DataBinder.ImageBinding_Format2(System.Object,System.Windows.Forms.ConvertEventArgs)">
	<summary>
 ピクチャボックスコントロールのプロパティをデータ値にバインドすると発生します。 
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.DataBinder.ImageBinding_Parse2(System.Object,System.Windows.Forms.ConvertEventArgs)">
	<summary>
 ピクチャボックスのデータ連結コントロールの値が変更されると発生します。
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.DataBinder.ImageBinding_Format(System.Object,System.Windows.Forms.ConvertEventArgs)">
	<summary>
 ピクチャボックスコントロールのプロパティをデータ値にバインドすると発生します。 
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.DataBinder.ImageBinding_Parse(System.Object,System.Windows.Forms.ConvertEventArgs)">
	<summary>
 ピクチャボックスのデータ連結コントロールの値が変更されると発生します。
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="E:Moca.Win.DataBinder.ColumnChanging">
	<summary>
 値が変更されているときに発生します
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.DataBinder.CreateDbParameter(System.Windows.Forms.Label,Moca.Db.IDbCommandSql)">
	<summary>
 Label コントロールからパラメータを作成する
 </summary>
	<param name="ctrl">コントロール</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Moca.Win.DataBinder.CreateDbParameter(System.Windows.Forms.TextBoxBase,Moca.Db.IDbCommandSql)">
	<summary>
 TextBoxBase からの派生型コントロールからパラメータを作成する
 </summary>
	<param name="ctrl">コントロール</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Moca.Win.DataBinder.CreateDbParameter(System.Windows.Forms.ComboBox,Moca.Db.IDbCommandSql)">
	<summary>
 ComboBox コントロールからパラメータを作成する
 </summary>
	<param name="ctrl">コントロール</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Moca.Win.DataBinder.CreateDbParameter(System.Windows.Forms.PictureBox,Moca.Db.IDbCommandSql)">
	<summary>
 PictureBox コントロールからパラメータを作成する
 </summary>
	<param name="ctrl">コントロール</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Moca.Win.DataBinder._rowChanging(System.Object,System.Data.DataColumnChangeEventArgs)">
	<summary>
 値が変更されているときに発生します
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.DataBinder._createDbParameter(System.Windows.Forms.Binding,Moca.Db.IDbCommandSql)">
	<summary>
 バインディングからパラメータを作成する
 </summary>
	<param name="bind"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:Moca.Win.DataBinder">
	<summary>
 データバインダーコンポーネント
 </summary>
	<remarks>
 画面の入力項目とデータのバインディングを補助するコンポーネントです。<br/>
 標準でロジックを組むよりは扱いやすくしたつもりです。<br/>
	</remarks>
</member><member name="F:Moca.Win.CheckBoxGroup._aryButton">
	<summary>チェックボックス化するItemを格納する</summary>
</member><member name="P:Moca.Win.CheckBoxGroup.Enabled">
	<summary>
 コントロールがユーザーとの対話に応答できるかどうかを示す値を設定します。
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Moca.Win.CheckBoxGroup.Add(System.Windows.Forms.CheckBox@)">
	<summary>
 チェックボックスを追加する
 </summary>
	<param name="ctrl">グループにしたいチェックボックス</param>
	<remarks>
	</remarks>
</member><member name="M:Moca.Win.CheckBoxGroup.Add(System.Windows.Forms.CheckBox@,System.Object)">
	<summary>
 チェックボックスを追加する
 </summary>
	<param name="ctrl">グループにしたいチェックボックス</param>
	<param name="value">保持したい値</param>
	<remarks>
 value にて指定された値を Tag プロパティにて保持します。
 </remarks>
</member><member name="M:Moca.Win.CheckBoxGroup.GetSelected">
	<summary>
 現在選択されているチェックボックスコントロールを返す
 </summary>
	<returns></returns>
	<remarks>
 未選択時は Length=0 を返します。
 </remarks>
</member><member name="M:Moca.Win.CheckBoxGroup.GetSelectedValue">
	<summary>
 現在選択されているチェックボックスコントロールの値を返す
 </summary>
	<returns></returns>
	<remarks>
 タグプロパティに値が設定されている事が前提ですので、<see cref="M:Moca.Win.CheckBoxGroup.Add(System.Windows.Forms.CheckBox@)"/> メソッドは Value 指定してください。
 </remarks>
</member><member name="M:Moca.Win.CheckBoxGroup.GetSelectedText">
	<summary>
 現在選択されているチェックボックスコントロールの文字列を返す
 </summary>
	<returns></returns>
	<remarks>
 タグプロパティに値が設定されている事が前提ですので、<see cref="M:Moca.Win.CheckBoxGroup.Add(System.Windows.Forms.CheckBox@)"/> メソッドは Value 指定してください。
 </remarks>
</member><member name="M:Moca.Win.CheckBoxGroup.SetSelected(System.Windows.Forms.CheckBox)">
	<summary>
 指定された値のチェックボックスを選択する
 </summary>
	<param name="btn">選択したいCheckBoxを設定</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Moca.Win.CheckBoxGroup.SetSelected(System.Object)">
	<summary>
 指定された値のチェックボックスを選択する
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks>
 タグプロパティに値が設定されている事が前提ですので、<see cref="M:Moca.Win.CheckBoxGroup.Add(System.Windows.Forms.CheckBox@)"/> メソッドは Value 指定してください。
 </remarks>
</member><member name="M:Moca.Win.CheckBoxGroup.SetSelected(System.Collections.ICollection)">
	<summary>
 指定された値のチェックボックスを選択する
 </summary>
	<remarks>
 タグプロパティに値が設定されている事が前提ですので、<see cref="M:Moca.Win.CheckBoxGroup.Add(System.Windows.Forms.CheckBox@)"/> メソッドは Value 指定してください。
 </remarks>
</member><member name="M:Moca.Win.CheckBoxGroup.IsSelected(System.Object)">
	<summary>
 指定された値のチェックボックスが選択されているか返す
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks>
 タグプロパティに値が設定されている事が前提ですので、<see cref="M:Moca.Win.CheckBoxGroup.Add(System.Windows.Forms.CheckBox@)"/> メソッドは Value 指定してください。
 </remarks>
</member><member name="M:Moca.Win.CheckBoxGroup.ToStringText(System.String)">
	<summary>
 選択されている項目のタイトルを指定された区切り文字で連結して返す
 </summary>
	<param name="delimiter"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:Moca.Win.CheckBoxGroup">
	<summary>
 複数のチェックボックスをグループとして扱うクラス
 </summary>
	<remarks>
 複数のチェックボックスを一つのグループとして扱えます。<br/>
 パネルコントロールなどでグループ化するには複雑過ぎる画面などでの使用を想定しています。<br/>
	</remarks>
</member><member name="E:Moca.Win.Calendar.ChangedDay">
	<summary>
 日付が変更された時のイベント
 </summary>
	<param name="day">選択された日付</param>
	<remarks></remarks>
</member><member name="E:Moca.Win.Calendar.ChangedMonth">
	<summary>
 月が変更された時のイベント
 </summary>
	<param name="month">選択された月</param>
	<remarks></remarks>
</member><member name="E:Moca.Win.Calendar.DayKeyDown">
	<summary>
 日付でキーが押されたときのイベント
 </summary>
	<param name="day">押された時にフォーカスがあった日付</param>
	<param name="e">キーイベント引数</param>
	<remarks></remarks>
</member><member name="P:Moca.Win.Calendar.TitleFormat">
	<summary>
 タイトルのフォーマット
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.Calendar.TitleFont">
	<summary>
 タイトルのフォント
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.Calendar.TitleForeColor">
	<summary>
 タイトルの文字色
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.Calendar.DayOfMonthTitleForeColor">
	<summary>
 曜日（平日）タイトルの文字色
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.Calendar.SundayTitleForeColor">
	<summary>
 曜日（日曜日）タイトルの文字色
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.Calendar.SaturdayTitleForeColor">
	<summary>
 曜日（土曜日）タイトルの文字色
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.Calendar.Value">
	<summary>
 年月日
 </summary>
	<remarks></remarks>
</member><member name="P:Moca.Win.Calendar.PreSelectEnable">
	<summary>
 過去の選択
 </summary>
	<remarks></remarks>
</member><member name="P:Moca.Win.Calendar.MinDate">
	<summary>
 表示する最小日
 </summary>
	<value></value>
	<returns></returns>
	<remarks>
 省略時は<see cref="T:System.DateTime"></see>
	</remarks>
</member><member name="P:Moca.Win.Calendar.MaxDate">
	<summary>
 表示する最大日
 </summary>
	<value></value>
	<returns></returns>
	<remarks>
 省略時は<see cref="T:System.DateTime"></see>
	</remarks>
</member><member name="P:Moca.Win.Calendar.TrailStyle">
	<summary>
 選択不可の日付の表示スタイルID
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.Calendar.DefaultDayBackColor">
	<summary>
 デフォルトで使用する日付の背景色
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.Calendar.DefaultDayForeColor">
	<summary>
 デフォルトで使用する日付の文字色
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.Calendar.DefaultDayFont">
	<summary>
 デフォルトで使用する日付のフォント
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.Calendar.SelectedDayBackColor">
	<summary>
 選択された日付の背景色
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.Calendar.SelectedDayForeColor">
	<summary>
 選択された日付の文字色
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.Calendar.SelectedDayFont">
	<summary>
 選択された日付のフォント
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.Calendar.HeaderToolTip">
	<summary>
 タイトルのツールチップ
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.Calendar.NextMonthToolTip">
	<summary>
 ＞のツールチップ
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.Calendar.PreMonthToolTip">
	<summary>
 ＜のツールチップ
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.Calendar.TodayToolTip">
	<summary>
 本日のツールチップ
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.Calendar.DayStyles">
	<summary>
 休日以外の表示スタイル
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.Calendar.HolidayStyles">
	<summary>
 休日用の表示スタイル
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.Calendar.Holiday">
	<summary>
 休日日付
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.Calendar._isDesignMode">
	<summary>
 デザインモードか返す
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Moca.Win.Calendar.Calendar_Load(System.Object,System.EventArgs)">
	<summary>
 ロード
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.Calendar.Calendar_MouseWheel(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>
 このコントロール内でホイール移動イベント
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.Calendar.Calendar_VisibleChanged(System.Object,System.EventArgs)">
	<summary>
 カレンダーの表示・非表示が変わった
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.Calendar.btnPreMon_Click(System.Object,System.EventArgs)">
	<summary>
 前の月ボタンクリック処理
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.Calendar.btnNextMon_Click(System.Object,System.EventArgs)">
	<summary>
 次の月ボタンクリック処理
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.Calendar.btnDay_Click(System.Object,System.EventArgs)">
	<summary>
 カレンダーボタンクリック
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.Calendar.btnDay_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>
 カレンダーボタンキー押下
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.Calendar.btnDay_Enter(System.Object,System.EventArgs)">
	<summary>
 カレンダーボタンの入力
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.Calendar.btnDay_Leave(System.Object,System.EventArgs)">
	<summary>
 カレンダーボタンから離れる
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.Calendar.btnMonth_Click(System.Object,System.EventArgs)">
	<summary>
 月選択のボタンクリック
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.Calendar.pnlMonthList_MouseWheel(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>
 月選択内でホイール移動イベント
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.Calendar.lblHeader_Click(System.Object,System.EventArgs)">
	<summary>
 タイトル部のクリック
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.Calendar.btnToday_Click(System.Object,System.EventArgs)">
	<summary>
 当日部のクリック
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.Calendar.selectedChangeDay(System.Windows.Forms.Button)">
	<summary>
 選択日付ボタンの移動
 </summary>
	<param name="btn"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.Calendar._setDayStyleLeave(System.Int32,System.Int32,System.Windows.Forms.Button)">
	<summary>
 日付が非選択状態のスタイル設定
 </summary>
	<param name="year"></param>
	<param name="month"></param>
	<param name="btn"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.Calendar._setDayStyleEnter(System.Int32,System.Int32,System.Windows.Forms.Button)">
	<summary>
 日付が選択状態のスタイル設定
 </summary>
	<param name="year"></param>
	<param name="month"></param>
	<param name="btn"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.Calendar.IsHoliday(System.DateTime)">
	<summary>
 休日か判定する
 </summary>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Moca.Win.Calendar._setValue(System.Object)">
	<summary>
 日付設定
 </summary>
	<param name="val"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.Calendar._actPreYear">
	<summary>
 前年に移動
 </summary>
	<remarks></remarks>
</member><member name="M:Moca.Win.Calendar._actNextYear">
	<summary>
 次年に移動
 </summary>
	<remarks></remarks>
</member><member name="M:Moca.Win.Calendar._actPreMonth">
	<summary>
 前月に移動
 </summary>
	<remarks></remarks>
</member><member name="M:Moca.Win.Calendar._actNextMonth">
	<summary>
 次月に移動
 </summary>
	<remarks></remarks>
</member><member name="M:Moca.Win.Calendar._getEnableDayButton">
	<summary>
 現在有効な日付のボタンを返す
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Moca.Win.Calendar._showMonthSelect">
	<summary>
 月選択画面を表示
 </summary>
	<remarks></remarks>
</member><member name="M:Moca.Win.Calendar._setMonth(System.DateTime,Moca.Win.AnimateWindow.DirectionType)">
	<summary>
 月選択の月表示を設定
 </summary>
	<param name="nowMonth"></param>
	<param name="direction"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.Calendar._closeMonthSelect(System.Boolean)">
	<summary>
 月選択画面を非表示
 </summary>
	<param name="selected"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.Calendar._setCalendar(System.Int32,System.Int32,Moca.Win.AnimateWindow.DirectionType)">
	<summary>
 カレンダーボタン設定
 </summary>
	<param name="yy"></param>
	<param name="mm"></param>
	<remarks></remarks>
</member><member name="T:Moca.Win.Calendar">
	<summary>
 カレンダーコントロール
 </summary>
	<remarks></remarks>
</member><member name="T:Moca.Win.BindValueValidator._entityBindInfo">
	<summary>
 検証時のデータたち
 </summary>
	<remarks></remarks>
</member><member name="P:Moca.Win.BindValueValidator.Validator">
	<summary>検証</summary>
</member><member name="M:Moca.Win.BindValueValidator.#ctor">
	<summary>
 コンストラクタ
 </summary>
	<remarks></remarks>
</member><member name="M:Moca.Win.BindValueValidator.DoValidation(System.Object,System.Object,Moca.UpdateEntityValidate)">
	<summary>
 検証開始
 </summary>
	<param name="bindTarget">バインドしているコントロールがあるフォーム</param>
	<param name="entity">エンティティ</param>
	<param name="validateMethod">検証した結果を処理するデリゲート</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Moca.Win.BindValueValidator._getControlValue(Moca.Win.BindValueValidator._entityBindInfo,System.String)">
	<summary>
 コントロールの値を取得
 </summary>
	<param name="bindInfo"></param>
	<param name="name"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.BindValueValidator._validate(Moca.Win.BindValueValidator._entityBindInfo)">
	<summary>
 検証
 </summary>
	<param name="bindInfo"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.BindValueValidator._getAttrBindControl(System.Reflection.PropertyInfo)">
	<summary>
 バインドコントロール属性を取得する
 </summary>
	<param name="propInfo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Moca.Win.BindValueValidator._getEntityValue(System.Object,System.Reflection.PropertyInfo)">
	<summary>
 エンティティの値を取得する
 </summary>
	<param name="entity"></param>
	<param name="propInfo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Moca.Win.BindValueValidator._getBindControl(System.Object,System.Reflection.PropertyInfo)">
	<summary>
 バインド先のコントロールを取得する
 </summary>
	<param name="bindTarget"></param>
	<param name="propInfo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Moca.Win.BindValueValidator._getAttrValidate(System.Reflection.PropertyInfo)">
	<summary>
 検証属性を取得する
 </summary>
	<param name="propInfo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Moca.Win.BindValueValidator._getCaption(System.Reflection.PropertyInfo)">
	<summary>
 エンティティのキャプション属性を取得し文字列を返す
 </summary>
	<param name="propInfo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Moca.Win.BindValueValidator._getTableColumnName(System.Reflection.PropertyInfo)">
	<summary>
 エンティティのテーブル列名を返す
 </summary>
	<param name="propInfo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:Moca.Win.BindValueValidator">
	<summary>
 バインドしているコントロールの値を検証する
 </summary>
	<remarks>
 現在対応しているコントロール<br/>
		<see cref="T:System.Windows.Forms.TextBox"></see><br/>
		<see cref="T:System.Windows.Forms.ComboBox"></see><br/>
		<see cref="T:Moca.Win.NullableDateTimePicker"></see><br/>
		<see cref="T:System.Windows.Forms.DateTimePicker"></see><br/>
	</remarks>
</member><member name="F:Moca.Win.BindingHelper._bindSrc">
	<summary>フォームのデータ ソースをカプセル化</summary>
</member><member name="M:Moca.Win.BindingHelper.#ctor">
	<summary>
 デフォルトコンストラクタ
 </summary>
	<remarks></remarks>
</member><member name="P:Moca.Win.BindingHelper.DataSource">
	<summary>
 バインドするデータソース
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.BindingHelper.DataMember">
	<summary>
 バインドするデータソースのメンバ名
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.BindingHelper.Position">
	<summary>
 現在行位置
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.BindingHelper.CurrentRow">
	<summary>
 現在行データ
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Moca.Win.BindingHelper.EndCurrentEdit">
	<summary>
 現在行の編集終了
 </summary>
	<remarks></remarks>
</member><member name="M:Moca.Win.BindingHelper.EndEdit">
	<summary>
 現在行の編集終了
 </summary>
	<remarks></remarks>
</member><member name="M:Moca.Win.BindingHelper.HasChanges">
	<summary>
 新しい行、削除された行、変更された行などの変更があるかどうかを示す値を取得します。
 </summary>
	<returns>変更がある場合は true。それ以外の場合は false。</returns>
	<remarks></remarks>
</member><member name="M:Moca.Win.BindingHelper.AcceptChanges">
	<summary>
 データソース全体の変更をコミットする 
 </summary>
	<remarks>
	</remarks>
</member><member name="M:Moca.Win.BindingHelper.AcceptChangesRow">
	<summary>
 現在行の変更をコミットする 
 </summary>
	<remarks>
	</remarks>
</member><member name="M:Moca.Win.BindingHelper.RejectChanges">
	<summary>
 データソース全体で前回 AcceptChanges を呼び出した以降にこのデータに対して行われたすべての変更をロールバックします。
 </summary>
	<remarks></remarks>
</member><member name="M:Moca.Win.BindingHelper.RejectChangesRow">
	<summary>
 現在行で前回 AcceptChanges を呼び出した以降にこのデータに対して行われたすべての変更をロールバックします。
 </summary>
	<remarks></remarks>
</member><member name="M:Moca.Win.BindingHelper.MoveNext">
	<summary>
 リストの次の項目に移動します。
 </summary>
	<remarks></remarks>
</member><member name="M:Moca.Win.BindingHelper.MovePrevious">
	<summary>
 リストの前の項目に移動します。
 </summary>
	<remarks></remarks>
</member><member name="M:Moca.Win.BindingHelper.MoveFirst">
	<summary>
 リストの最初の項目に移動します。
 </summary>
	<remarks></remarks>
</member><member name="M:Moca.Win.BindingHelper.MoveLast">
	<summary>
 リストの最後の項目に移動します。
 </summary>
	<remarks></remarks>
</member><member name="M:Moca.Win.BindingHelper.DataBinding(System.Windows.Forms.Label,System.String,System.Object,System.Object)">
	<summary>
 ラベルのデータバインディング
 </summary>
	<param name="ctrl">ラベル</param>
	<param name="dataMember">バインドするデータソースの項目名</param>
	<param name="dataSourceNullValue">コントロールの値が null 参照 (Visual Basic では Nothing) または空の場合にデータ ソースに格納される値を取得または設定します。 </param>
	<param name="nullValue">データ ソースに <see cref="T:System.DBNull"/> 値が格納されている場合にコントロール プロパティとして設定される <see cref="T:System.Object"/> を取得または設定します。</param>
	<remarks></remarks>
</member><member name="M:Moca.Win.BindingHelper.DataBinding(System.Windows.Forms.TextBox,System.String,System.Object,System.Object)">
	<summary>
 テキストボックスのデータバインディング
 </summary>
	<param name="ctrl">テキストボックス</param>
	<param name="dataMember">バインドするデータソースの項目名</param>
	<param name="dataSourceNullValue">コントロールの値が null 参照 (Visual Basic では Nothing) または空の場合にデータ ソースに格納される値を取得または設定します。 </param>
	<param name="nullValue">データ ソースに <see cref="T:System.DBNull"/> 値が格納されている場合にコントロール プロパティとして設定される <see cref="T:System.Object"/> を取得または設定します。</param>
	<remarks></remarks>
</member><member name="M:Moca.Win.BindingHelper.DataBinding(System.Windows.Forms.ComboBox,System.String,System.Object,System.Object)">
	<summary>
 コンボボックスのデータバインディング
 </summary>
	<param name="ctrl">コンボボックス</param>
	<param name="dataMember">バインドするデータソースの項目名</param>
	<param name="dataSourceNullValue">コントロールの値が null 参照 (Visual Basic では Nothing) または空の場合にデータ ソースに格納される値を取得または設定します。 </param>
	<param name="nullValue">データ ソースに <see cref="T:System.DBNull"/> 値が格納されている場合にコントロール プロパティとして設定される <see cref="T:System.Object"/> を取得または設定します。</param>
	<remarks></remarks>
</member><member name="M:Moca.Win.BindingHelper.DataBinding(System.Windows.Forms.CheckBox,System.String,System.Object,System.Object)">
	<summary>
 チェックボックスのデータバインディング
 </summary>
	<param name="ctrl">チェックボックス</param>
	<param name="dataMember">バインドするデータソースの項目名</param>
	<param name="dataSourceNullValue">コントロールの値が null 参照 (Visual Basic では Nothing) または空の場合にデータ ソースに格納される値を取得または設定します。 </param>
	<param name="nullValue">データ ソースに <see cref="T:System.DBNull"/> 値が格納されている場合にコントロール プロパティとして設定される <see cref="T:System.Object"/> を取得または設定します。</param>
	<remarks></remarks>
</member><member name="M:Moca.Win.BindingHelper.DataBinding(Moca.Win.NullableDateTimePicker,System.String,System.Object,System.Object)">
	<summary>
 標準のDateTimePickerでNullを扱えるように拡張したコントロールのデータバインディング
 </summary>
	<param name="ctrl">標準のDateTimePickerでNullを扱えるように拡張したコントロール</param>
	<param name="dataMember">バインドするデータソースの項目名</param>
	<param name="dataSourceNullValue">コントロールの値が null 参照 (Visual Basic では Nothing) または空の場合にデータ ソースに格納される値を取得または設定します。 </param>
	<param name="nullValue">データ ソースに <see cref="T:System.DBNull"/> 値が格納されている場合にコントロール プロパティとして設定される <see cref="T:System.Object"/> を取得または設定します。</param>
	<remarks></remarks>
</member><member name="M:Moca.Win.BindingHelper.DataBinding(Moca.Win.RadioButtonGroup,System.String,System.Object,System.Object)">
	<summary>
 複数のラジオボタンをグループとして扱うコンポーネントのデータバインディング
 </summary>
	<param name="ctrl">複数のラジオボタンをグループとして扱うコンポーネント</param>
	<param name="dataMember">バインドするデータソースの項目名</param>
	<param name="dataSourceNullValue">コントロールの値が null 参照 (Visual Basic では Nothing) または空の場合にデータ ソースに格納される値を取得または設定します。 </param>
	<param name="nullValue">データ ソースに <see cref="T:System.DBNull"/> 値が格納されている場合にコントロール プロパティとして設定される <see cref="T:System.Object"/> を取得または設定します。</param>
	<remarks></remarks>
</member><member name="M:Moca.Win.BindingHelper._dataBinding(System.Windows.Forms.IBindableComponent,System.String,System.String,System.Object,System.Object)">
	<summary>
 データバインディングする
 </summary>
	<param name="obj">対象のコントロール</param>
	<param name="propertyName">バインドするコントロールのプロパティ名</param>
	<param name="dataMember">バインドするデータソースの項目名</param>
	<param name="dataSourceNullValue">コントロールの値が null 参照 (Visual Basic では Nothing) または空の場合にデータ ソースに格納される値を取得または設定します。 </param>
	<param name="nullValue">データ ソースに <see cref="T:System.DBNull"/> 値が格納されている場合にコントロール プロパティとして設定される <see cref="T:System.Object"/> を取得または設定します。</param>
	<remarks>
 コントロール プロパティの値が変更されるたびに、データ ソースが更新されます。
 </remarks>
</member><member name="M:Moca.Win.BindingHelper.DataBinding(System.Windows.Forms.PictureBox,System.String)">
	<summary>
 ピクチャボックスのデータバインディング
 </summary>
	<param name="pbx">ピクチャボックス</param>
	<param name="dataMember">バインドするデータソースの項目名</param>
	<remarks>
 未使用。ピクチャボックスをバインディングするのはやめたので。
 </remarks>
</member><member name="M:Moca.Win.BindingHelper.ImageBinding_Format2(System.Object,System.Windows.Forms.ConvertEventArgs)">
	<summary>
 ピクチャボックスコントロールのプロパティをデータ値にバインドすると発生します。 
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.BindingHelper.ImageBinding_Parse2(System.Object,System.Windows.Forms.ConvertEventArgs)">
	<summary>
 ピクチャボックスのデータ連結コントロールの値が変更されると発生します。
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.BindingHelper.ImageBinding_Format(System.Object,System.Windows.Forms.ConvertEventArgs)">
	<summary>
 ピクチャボックスコントロールのプロパティをデータ値にバインドすると発生します。 
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.BindingHelper.ImageBinding_Parse(System.Object,System.Windows.Forms.ConvertEventArgs)">
	<summary>
 ピクチャボックスのデータ連結コントロールの値が変更されると発生します。
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="E:Moca.Win.BindingHelper.ColumnChanging">
	<summary>
 値が変更されているときに発生します
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.BindingHelper.CreateDbParameter(System.Windows.Forms.Label,Moca.Db.IDbCommandSql)">
	<summary>
 Label コントロールからパラメータを作成する
 </summary>
	<param name="ctrl">コントロール</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Moca.Win.BindingHelper.CreateDbParameter(System.Windows.Forms.TextBoxBase,Moca.Db.IDbCommandSql)">
	<summary>
 TextBoxBase からの派生型コントロールからパラメータを作成する
 </summary>
	<param name="ctrl">コントロール</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Moca.Win.BindingHelper.CreateDbParameter(System.Windows.Forms.ComboBox,Moca.Db.IDbCommandSql)">
	<summary>
 ComboBox コントロールからパラメータを作成する
 </summary>
	<param name="ctrl">コントロール</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Moca.Win.BindingHelper.CreateDbParameter(System.Windows.Forms.PictureBox,Moca.Db.IDbCommandSql)">
	<summary>
 PictureBox コントロールからパラメータを作成する
 </summary>
	<param name="ctrl">コントロール</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Moca.Win.BindingHelper._rowChanging(System.Object,System.Data.DataColumnChangeEventArgs)">
	<summary>
 値が変更されているときに発生します
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.BindingHelper._createDbParameter(System.Windows.Forms.Binding,Moca.Db.IDbCommandSql)">
	<summary>
 バインディングからパラメータを作成する
 </summary>
	<param name="bind"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:Moca.Win.BindingHelper">
	<summary>
 データバインディングマネージャー
 </summary>
	<remarks></remarks>
</member><member name="F:Moca.Win.AlertMessage._animateWindow">
	<summary>ウィンドウアニメーション</summary>
</member><member name="M:Moca.Win.AlertMessage.#ctor">
	<summary>
 デフォルトコンストラクタ
 </summary>
	<remarks></remarks>
</member><member name="P:Moca.Win.AlertMessage.DefaultMessageBackColor">
	<summary>
 デフォルトの背景色
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.AlertMessage.DefaultMessageForeColor">
	<summary>
 デフォルトの文字色
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.AlertMessage.ErrorBackColor">
	<summary>
 エラー時の背景色
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.AlertMessage.ErrorForeColor">
	<summary>
 エラー時の文字色
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.AlertMessage.SuccessBackColor">
	<summary>
 正常時の背景色
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.AlertMessage.SuccessForeColor">
	<summary>
 正常時の文字色
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.AlertMessage.WarnBackColor">
	<summary>
 警告時の背景色
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.AlertMessage.WarnForeColor">
	<summary>
 警告時の文字色
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Moca.Win.AlertMessage.Text">
	<summary>
 メッセージ内容
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Moca.Win.AlertMessage.Clear">
	<summary>
 アラートクリア
 </summary>
	<remarks></remarks>
</member><member name="M:Moca.Win.AlertMessage.Success(System.String,System.String[])">
	<summary>
 正常アラート
 </summary>
	<param name="msg"></param>
	<param name="args"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.AlertMessage.Error(System.String,System.String[])">
	<summary>
 エラーアラート
 </summary>
	<param name="msg"></param>
	<param name="args"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.AlertMessage.Warn(System.String,System.String[])">
	<summary>
 ワーニングアラート
 </summary>
	<param name="msg"></param>
	<param name="args"></param>
	<remarks></remarks>
</member><member name="M:Moca.Win.AlertMessage._showAlert(System.Drawing.Color,System.Drawing.Color,System.String,System.String[])">
	<summary>
 アラートを表示
 </summary>
	<param name="labelBackColor"></param>
	<param name="labelForeColor"></param>
	<param name="msg"></param>
	<param name="args"></param>
	<remarks></remarks>
</member><member name="T:Moca.Win.AlertMessage">
	<summary>
 アラートメッセージ
 </summary>
	<remarks></remarks>
</member><member name="T:Moca.resourceDummy">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="P:Moca.My.Resources.Resources.ResourceManager">
	<summary>
  このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
</summary>
</member><member name="P:Moca.My.Resources.Resources.Culture">
	<summary>
  厳密に型指定されたこのリソース クラスを使用して、すべての検索リソースに対し、
  現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
</summary>
</member><member name="T:Moca.My.Resources.Resources">
	<summary>
  ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
</summary>
</member>
</members>
</doc>